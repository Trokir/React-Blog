{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\React Blog\\\\my-blog\\\\src\\\\pages\\\\ArticlePage.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport NotFoundPage from './NotFoundPage';\nimport articles from './article-content';\nimport CommentsList from '../components/CommentsList';\nimport AddNewCommentForm from '../components/AddCommentForm';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ArticlePage = () => {\n  _s();\n  const [articleInfo, setArticleInfo] = useState({\n    upvotes: 0,\n    comments: []\n  });\n  const {\n    articleId\n  } = useParams();\n  useEffect(() => {\n    const loadArticleInfo = async () => {\n      const response = await axios.get(`/api/articles/${articleId}`);\n      const newArticleInfo = response.data;\n      setArticleInfo(newArticleInfo);\n    };\n    loadArticleInfo();\n  }, [articleId]);\n  const article = articles.find(article => article.name === articleId);\n  const addUpvote = async () => {\n    const response = await axios.put(`/api/articles/${articleId}/upvote`);\n    const updatedArticle = response.data;\n    setArticleInfo(updatedArticle);\n  };\n  if (!article) {\n    return /*#__PURE__*/_jsxDEV(NotFoundPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: article.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upvotes-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addUpvote,\n        children: \"Upvote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"This article has \", articleInfo.upvotes, \" upvote(s)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), article.content.map((paragraph, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: paragraph\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(AddNewCommentForm, {\n      articleName: articleId,\n      onArticleUpdated: updatedArticle => setArticleInfo(updatedArticle)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: articleInfo.comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ArticlePage, \"uxgQhlukVG1cDZLhlKRrXAqYmVw=\", false, function () {\n  return [useParams];\n});\n_c = ArticlePage;\nexport default ArticlePage;\nvar _c;\n$RefreshReg$(_c, \"ArticlePage\");","map":{"version":3,"names":["useState","useEffect","useParams","axios","NotFoundPage","articles","CommentsList","AddNewCommentForm","jsxDEV","_jsxDEV","Fragment","_Fragment","ArticlePage","_s","articleInfo","setArticleInfo","upvotes","comments","articleId","loadArticleInfo","response","get","newArticleInfo","data","article","find","name","addUpvote","put","updatedArticle","fileName","_jsxFileName","lineNumber","columnNumber","children","title","className","onClick","content","map","paragraph","i","articleName","onArticleUpdated","_c","$RefreshReg$"],"sources":["E:/Projects/React Blog/my-blog/src/pages/ArticlePage.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport NotFoundPage from './NotFoundPage';\r\nimport articles from './article-content';\r\nimport CommentsList from '../components/CommentsList';\r\nimport AddNewCommentForm from '../components/AddCommentForm';\r\n\r\nconst ArticlePage = () => {\r\n    const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\r\n    const { articleId } = useParams();\r\n\r\n    useEffect(() => {\r\n        const loadArticleInfo = async () => {\r\n            const response = await axios.get(`/api/articles/${articleId}`);\r\n            const newArticleInfo = response.data;\r\n            setArticleInfo(newArticleInfo);\r\n        }\r\n\r\n        loadArticleInfo();\r\n    }, [articleId]);\r\n\r\n    const article = articles.find(article => article.name === articleId);\r\n\r\n    const addUpvote = async () => {\r\n        const response = await axios.put(`/api/articles/${articleId}/upvote`);\r\n        const updatedArticle = response.data;\r\n        setArticleInfo(updatedArticle);\r\n    }\r\n\r\n    if (!article) {\r\n        return <NotFoundPage />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>{article.title}</h1>\r\n            <div className=\"upvotes-section\">\r\n                <button onClick={addUpvote}>Upvote</button>\r\n                <p>This article has {articleInfo.upvotes} upvote(s)</p>\r\n            </div>\r\n            {article.content.map((paragraph, i) => (\r\n                <p key={i}>{paragraph}</p>\r\n            ))}\r\n            <AddNewCommentForm articleName={articleId}\r\n                onArticleUpdated={updatedArticle => setArticleInfo(updatedArticle)} />\r\n            <CommentsList comments={articleInfo.comments} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ArticlePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}