{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\React Blog\\\\my-blog\\\\src\\\\components\\\\CommentsList.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CommentsList = ({\n  comments\n}) => {\n  console.log(\"Comments received by CommentsList:\", comments); // Log the comments prop\n  if (!Array.isArray(comments)) {\n    console.error(\"Expected comments to be an array but got:\", typeof comments);\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Comments:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), comments.map((comment, index) => {\n      if (typeof comment !== 'object' || comment === null) {\n        console.error(\"Invalid comment object:\", comment);\n        return null;\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: comment.postedBy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true);\n};\n_c = CommentsList;\nexport default CommentsList;\nvar _c;\n$RefreshReg$(_c, \"CommentsList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","CommentsList","comments","console","log","Array","isArray","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","comment","index","className","postedBy","text","_c","$RefreshReg$"],"sources":["E:/Projects/React Blog/my-blog/src/components/CommentsList.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst CommentsList = ({ comments }) => {\r\n    console.log(\"Comments received by CommentsList:\", comments); // Log the comments prop\r\n    if (!Array.isArray(comments)) {\r\n        console.error(\"Expected comments to be an array but got:\", typeof comments);\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>Comments:</h3>\r\n            {comments.map((comment, index) => {\r\n                if (typeof comment !== 'object' || comment === null) {\r\n                    console.error(\"Invalid comment object:\", comment);\r\n                    return null;\r\n                }\r\n                return (\r\n                    <div className=\"comment\" key={index}>\r\n                        <h4>{comment.postedBy}</h4>\r\n                        <p>{comment.text}</p>\r\n                    </div>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CommentsList;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACnCC,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEF,QAAQ,CAAC,CAAC,CAAC;EAC7D,IAAI,CAACG,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAAC,EAAE;IAC1BC,OAAO,CAACI,KAAK,CAAC,2CAA2C,EAAE,OAAOL,QAAQ,CAAC;IAC3E,OAAO,IAAI;EACf;EAEA,oBACIJ,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACIV,OAAA;MAAAU,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBV,QAAQ,CAACW,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;MAC9B,IAAI,OAAOD,OAAO,KAAK,QAAQ,IAAIA,OAAO,KAAK,IAAI,EAAE;QACjDX,OAAO,CAACI,KAAK,CAAC,yBAAyB,EAAEO,OAAO,CAAC;QACjD,OAAO,IAAI;MACf;MACA,oBACIhB,OAAA;QAAKkB,SAAS,EAAC,SAAS;QAAAR,QAAA,gBACpBV,OAAA;UAAAU,QAAA,EAAKM,OAAO,CAACG;QAAQ;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC3Bd,OAAA;UAAAU,QAAA,EAAIM,OAAO,CAACI;QAAI;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFKG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAG9B,CAAC;IAEd,CAAC,CAAC;EAAA,eACJ,CAAC;AAEX,CAAC;AAACO,EAAA,GAxBIlB,YAAY;AA0BlB,eAAeA,YAAY;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}