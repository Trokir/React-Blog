{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\React Blog\\\\my-blog\\\\src\\\\components\\\\AddCommentForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddCommentForm = ({\n  articleName,\n  onArticleUpdated\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [commentText, setCommentText] = useState('');\n  const addComment = async () => {\n    const response = await axios.post(`/api/articles/${articleName}/comments`, {\n      postedBy: name,\n      text: commentText\n    });\n    const updatedArticle = response.data;\n    onArticleUpdated(updatedArticle);\n    setName('');\n    setCommentText('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"add-comment-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: name,\n        onChange: e => {\n          // Check if the input value is not a string\n          if (typeof e.target.value !== 'string') {\n            // Handle the case where the input is not a string\n            console.error('Input is not a string');\n          } else {\n            // If it is a string, update the state\n            setName(e.target.value);\n          }\n        },\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Comment:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: commentText,\n        onChange: e => setCommentText(e.target.value),\n        rows: \"4\",\n        cols: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addComment,\n      children: \"Add Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(AddCommentForm, \"V6DewtPmdtyIhe8O99G4DgRDSWA=\");\n_c = AddCommentForm;\nexport default AddCommentForm;\nvar _c;\n$RefreshReg$(_c, \"AddCommentForm\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","AddCommentForm","articleName","onArticleUpdated","_s","name","setName","commentText","setCommentText","addComment","response","post","postedBy","text","updatedArticle","data","id","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","console","error","type","rows","cols","onClick","_c","$RefreshReg$"],"sources":["E:/Projects/React Blog/my-blog/src/components/AddCommentForm.js"],"sourcesContent":["import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AddCommentForm = ({ articleName, onArticleUpdated }) => {\r\n    const [name, setName] = useState('');\r\n    const [commentText, setCommentText] = useState('');\r\n\r\n    const addComment = async () => {\r\n        const response = await axios.post(`/api/articles/${articleName}/comments`, {\r\n            postedBy: name,\r\n            text: commentText,\r\n        });\r\n        const updatedArticle = response.data;\r\n        onArticleUpdated(updatedArticle);\r\n        setName('');\r\n        setCommentText('');\r\n    }\r\n\r\n    return (\r\n        <div id=\"add-comment-form\">\r\n            <h3>Add a Comment</h3>\r\n            <label>\r\n                Name:\r\n                <input\r\n                    value={name}\r\n                    onChange={e => {\r\n                        // Check if the input value is not a string\r\n                        if (typeof e.target.value !== 'string') {\r\n                            // Handle the case where the input is not a string\r\n                            console.error('Input is not a string');\r\n                        } else {\r\n                            // If it is a string, update the state\r\n                            setName(e.target.value);\r\n                        }\r\n                    }}\r\n                    type=\"text\" />\r\n            </label>\r\n\r\n            <label>\r\n                Comment:\r\n                <textarea\r\n                    value={commentText}\r\n                    onChange={e => setCommentText(e.target.value)}\r\n                    rows=\"4\"\r\n                    cols=\"50\" />\r\n            </label>\r\n            <button onClick={addComment}>Add Comment</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddCommentForm;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,iBAAiBT,WAAW,WAAW,EAAE;MACvEU,QAAQ,EAAEP,IAAI;MACdQ,IAAI,EAAEN;IACV,CAAC,CAAC;IACF,MAAMO,cAAc,GAAGJ,QAAQ,CAACK,IAAI;IACpCZ,gBAAgB,CAACW,cAAc,CAAC;IAChCR,OAAO,CAAC,EAAE,CAAC;IACXE,cAAc,CAAC,EAAE,CAAC;EACtB,CAAC;EAED,oBACIR,OAAA;IAAKgB,EAAE,EAAC,kBAAkB;IAAAC,QAAA,gBACtBjB,OAAA;MAAAiB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBrB,OAAA;MAAAiB,QAAA,GAAO,OAEH,eAAAjB,OAAA;QACIsB,KAAK,EAAEjB,IAAK;QACZkB,QAAQ,EAAEC,CAAC,IAAI;UACX;UACA,IAAI,OAAOA,CAAC,CAACC,MAAM,CAACH,KAAK,KAAK,QAAQ,EAAE;YACpC;YACAI,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAC;UAC1C,CAAC,MAAM;YACH;YACArB,OAAO,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;UAC3B;QACJ,CAAE;QACFM,IAAI,EAAC;MAAM;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,eAERrB,OAAA;MAAAiB,QAAA,GAAO,UAEH,eAAAjB,OAAA;QACIsB,KAAK,EAAEf,WAAY;QACnBgB,QAAQ,EAAEC,CAAC,IAAIhB,cAAc,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC9CO,IAAI,EAAC,GAAG;QACRC,IAAI,EAAC;MAAI;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eACRrB,OAAA;MAAQ+B,OAAO,EAAEtB,UAAW;MAAAQ,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEd,CAAC;AAAAjB,EAAA,CA9CKH,cAAc;AAAA+B,EAAA,GAAd/B,cAAc;AAgDpB,eAAeA,cAAc;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}